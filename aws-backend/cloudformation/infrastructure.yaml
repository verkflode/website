AWSTemplateFormatVersion: '2010-09-09'
Description: 'Verkflöde Infrastructure - Lambda function and API Gateway for contact forms'

Parameters:
  MailgunApiKey:
    Type: String
    Description: Mailgun API Key
    NoEcho: true
  MailgunDomain:
    Type: String
    Description: Mailgun Domain
    Default: mg.verkflode.se
  TurnstileSecretKey:
    Type: String
    Description: Cloudflare Turnstile Secret Key
    NoEcho: true

Resources:
  # IAM Role for Lambda
  ContactFormLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # Lambda Function for Contact Forms
  ContactFormFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: verkflode-contact-form
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt ContactFormLambdaRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: 'Placeholder - deploy actual code' })
            };
          };
      Environment:
        Variables:
          MAILGUN_API_KEY: !Ref MailgunApiKey
          MAILGUN_DOMAIN: !Ref MailgunDomain
          TURNSTILE_SECRET_KEY: !Ref TurnstileSecretKey
      Timeout: 30

  # Lambda Function for Monitoring Alerts
  MonitoringAlertFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: verkflode-monitoring-alert
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt ContactFormLambdaRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: 'Placeholder - deploy actual code' })
            };
          };
      Environment:
        Variables:
          MAILGUN_API_KEY: !Ref MailgunApiKey
          MAILGUN_DOMAIN: !Ref MailgunDomain
      Timeout: 30

  # API Gateway
  ContactFormApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: verkflode-contact-api
      Description: API for Verkflöde contact forms
      EndpointConfiguration:
        Types:
          - REGIONAL

  # API Gateway Resource for Contact Form
  ContactFormResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormApi
      ParentId: !GetAtt ContactFormApi.RootResourceId
      PathPart: submit

  # API Gateway Resource for Monitoring Alerts
  MonitoringAlertResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormApi
      ParentId: !GetAtt ContactFormApi.RootResourceId
      PathPart: monitoring-alert

  # API Gateway Method
  ContactFormMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref ContactFormResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ContactFormFunction.Arn}/invocations'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true

  # Monitoring Alert Method
  MonitoringAlertMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref MonitoringAlertResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MonitoringAlertFunction.Arn}/invocations'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true

  # OPTIONS method for CORS - Contact Form
  ContactFormOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref ContactFormResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true

  # OPTIONS method for CORS - Monitoring Alert
  MonitoringAlertOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref MonitoringAlertResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true

  # Lambda Permission for API Gateway - Contact Form
  ContactFormLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ContactFormFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ContactFormApi}/*/*'

  # Lambda Permission for API Gateway - Monitoring Alert
  MonitoringAlertLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MonitoringAlertFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ContactFormApi}/*/*'

  # API Gateway Deployment
  ContactFormDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ContactFormMethod
      - ContactFormOptionsMethod
      - MonitoringAlertMethod
      - MonitoringAlertOptionsMethod
    Properties:
      RestApiId: !Ref ContactFormApi
      StageName: prod

Outputs:
  ContactApiEndpoint:
    Description: Contact form API Gateway endpoint URL
    Value: !Sub 'https://${ContactFormApi}.execute-api.${AWS::Region}.amazonaws.com/prod/submit'
    Export:
      Name: VerkflodeContactApiEndpoint

  MonitoringAlertApiEndpoint:
    Description: Monitoring alert API Gateway endpoint URL
    Value: !Sub 'https://${ContactFormApi}.execute-api.${AWS::Region}.amazonaws.com/prod/monitoring-alert'
    Export:
      Name: VerkflodeMonitoringAlertApiEndpoint
  
  ContactLambdaFunctionArn:
    Description: Contact form Lambda function ARN
    Value: !GetAtt ContactFormFunction.Arn
    Export:
      Name: VerkflodeContactLambdaArn

  MonitoringAlertLambdaFunctionArn:
    Description: Monitoring alert Lambda function ARN
    Value: !GetAtt MonitoringAlertFunction.Arn
    Export:
      Name: VerkflodeMonitoringAlertLambdaArn